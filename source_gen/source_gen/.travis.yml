# Created with package:mono_repo v2.0.0
language: dart

jobs:
  include:
    - stage: analyze_format
      name: "SDK: dev; PKG: _test_annotations; TASKS: [`dartfmt -n --set-exit-if-changed .`, `dartanalyzer --fatal-infos --fatal-warnings .`]"
      dart: dev
      env: PKGS="_test_annotations"
      script: ./tool/travis.sh dartfmt dartanalyzer
    - stage: analyze_format
      name: "SDK: dev; PKG: example; TASKS: [`dartfmt -n --set-exit-if-changed .`, `dartanalyzer --fatal-infos --fatal-warnings .`]"
      dart: dev
      env: PKGS="example"
      script: ./tool/travis.sh dartfmt dartanalyzer
    - stage: analyze_format
      name: "SDK: dev; PKG: example_usage; TASKS: [`dartfmt -n --set-exit-if-changed .`, `dartanalyzer --fatal-infos --fatal-warnings .`]"
      dart: dev
      env: PKGS="example_usage"
      script: ./tool/travis.sh dartfmt dartanalyzer
    - stage: analyze_format
      name: "SDK: dev; PKG: source_gen; TASKS: [`dartfmt -n --set-exit-if-changed .`, `dartanalyzer --fatal-infos --fatal-warnings .`]"
      dart: dev
      env: PKGS="source_gen"
      script: ./tool/travis.sh dartfmt dartanalyzer
    - stage: analyze_format
      name: "SDK: 2.1.0; PKG: example; TASKS: [`dartfmt -n --set-exit-if-changed .`, `dartanalyzer --fatal-infos --fatal-warnings .`]"
      dart: "2.1.0"
      env: PKGS="example"
      script: ./tool/travis.sh dartfmt dartanalyzer
    - stage: analyze_format
      name: "SDK: 2.1.0; PKG: example_usage; TASKS: [`dartfmt -n --set-exit-if-changed .`, `dartanalyzer --fatal-infos --fatal-warnings .`]"
      dart: "2.1.0"
      env: PKGS="example_usage"
      script: ./tool/travis.sh dartfmt dartanalyzer
    - stage: analyze_format
      name: "SDK: 2.1.0; PKG: source_gen; TASKS: [`dartfmt -n --set-exit-if-changed .`, `dartanalyzer --fatal-infos --fatal-warnings .`]"
      dart: "2.1.0"
      env: PKGS="source_gen"
      script: ./tool/travis.sh dartfmt dartanalyzer
    - stage: unit_test
      name: "SDK: dev; PKG: example_usage; TASKS: `pub run test --run-skipped`"
      dart: dev
      env: PKGS="example_usage"
      script: ./tool/travis.sh test
    - stage: unit_test
      name: "SDK: 2.1.0; PKG: example_usage; TASKS: `pub run test --run-skipped`"
      dart: "2.1.0"
      env: PKGS="example_usage"
      script: ./tool/travis.sh test
    - stage: unit_test
      name: "SDK: dev; PKG: source_gen; TASKS: `pub run build_runner test -- -j 1`"
      dart: dev
      env: PKGS="source_gen"
      script: ./tool/travis.sh command
    - stage: unit_test
      name: "SDK: 2.1.0; PKG: source_gen; TASKS: `pub run build_runner test -- -j 1`"
      dart: "2.1.0"
      env: PKGS="source_gen"
      script: ./tool/travis.sh command

stages:
  - analyze_format
  - unit_test

# Only building master means that we don't run two builds for each pull request.
branches:
  only:
    - master

cache:
  directories:
    - "$HOME/.pub-cache"
    - example_usage/.dart_tool/build
    - source_gen/.dart_tool/build
