# Created with package:mono_repo v1.2.1
language: dart

jobs:
  include:
    - stage: analyze_format
      name: "SDK: dev - DIR: _test_annotations - TASKS: [dartfmt -n --set-exit-if-changed ., dartanalyzer --fatal-infos --fatal-warnings .]"
      script: ./tool/travis.sh dartfmt dartanalyzer
      env: PKG="_test_annotations"
      dart: dev
    - stage: analyze_format
      name: "SDK: dev - DIR: example - TASKS: [dartfmt -n --set-exit-if-changed ., dartanalyzer --fatal-infos --fatal-warnings .]"
      script: ./tool/travis.sh dartfmt dartanalyzer
      env: PKG="example"
      dart: dev
    - stage: analyze_format
      name: "SDK: stable - DIR: example - TASKS: [dartfmt -n --set-exit-if-changed ., dartanalyzer --fatal-infos --fatal-warnings .]"
      script: ./tool/travis.sh dartfmt dartanalyzer
      env: PKG="example"
      dart: stable
    - stage: analyze_format
      name: "SDK: 2.0.0 - DIR: example - TASKS: [dartfmt -n --set-exit-if-changed ., dartanalyzer --fatal-infos --fatal-warnings .]"
      script: ./tool/travis.sh dartfmt dartanalyzer
      env: PKG="example"
      dart: "2.0.0"
    - stage: analyze_format
      name: "SDK: dev - DIR: example_usage - TASKS: [dartfmt -n --set-exit-if-changed ., dartanalyzer --fatal-infos --fatal-warnings .]"
      script: ./tool/travis.sh dartfmt dartanalyzer
      env: PKG="example_usage"
      dart: dev
    - stage: analyze_format
      name: "SDK: stable - DIR: example_usage - TASKS: [dartfmt -n --set-exit-if-changed ., dartanalyzer --fatal-infos --fatal-warnings .]"
      script: ./tool/travis.sh dartfmt dartanalyzer
      env: PKG="example_usage"
      dart: stable
    - stage: unit_test
      name: "SDK: dev - DIR: example_usage - TASKS: pub run test --run-skipped"
      script: ./tool/travis.sh test
      env: PKG="example_usage"
      dart: dev
    - stage: unit_test
      name: "SDK: stable - DIR: example_usage - TASKS: pub run test --run-skipped"
      script: ./tool/travis.sh test
      env: PKG="example_usage"
      dart: stable
    - stage: analyze_format
      name: "SDK: dev - DIR: source_gen - TASKS: [dartfmt -n --set-exit-if-changed ., dartanalyzer --fatal-infos --fatal-warnings .]"
      script: ./tool/travis.sh dartfmt dartanalyzer
      env: PKG="source_gen"
      dart: dev
    - stage: analyze_format
      name: "SDK: stable - DIR: source_gen - TASKS: [dartfmt -n --set-exit-if-changed ., dartanalyzer --fatal-infos --fatal-warnings .]"
      script: ./tool/travis.sh dartfmt dartanalyzer
      env: PKG="source_gen"
      dart: stable
    - stage: analyze_format
      name: "SDK: 2.0.0 - DIR: source_gen - TASKS: [dartfmt -n --set-exit-if-changed ., dartanalyzer --fatal-infos --fatal-warnings .]"
      script: ./tool/travis.sh dartfmt dartanalyzer
      env: PKG="source_gen"
      dart: "2.0.0"
    - stage: unit_test
      name: "SDK: dev - DIR: source_gen - TASKS: pub run build_runner test -- -j 1"
      script: ./tool/travis.sh command
      env: PKG="source_gen"
      dart: dev
    - stage: unit_test
      name: "SDK: stable - DIR: source_gen - TASKS: pub run build_runner test -- -j 1"
      script: ./tool/travis.sh command
      env: PKG="source_gen"
      dart: stable
    - stage: unit_test
      name: "SDK: 2.0.0 - DIR: source_gen - TASKS: pub run build_runner test -- -j 1"
      script: ./tool/travis.sh command
      env: PKG="source_gen"
      dart: "2.0.0"

stages:
  - analyze_format
  - unit_test

# Only building master means that we don't run two builds for each pull request.
branches:
  only:
    - master

cache:
  directories:
    - "$HOME/.pub-cache"
    - example_usage/.dart_tool/build
    - source_gen/.dart_tool/build
