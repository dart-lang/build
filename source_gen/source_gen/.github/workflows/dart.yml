# Created with package:mono_repo v3.4.6
name: Dart CI
on:
  push:
    branches:
      - main
      - master
  pull_request:
  schedule:
    - cron: "0 0 * * 0"
defaults:
  run:
    shell: bash
env:
  PUB_ENVIRONMENT: bot.github

jobs:
  job_001:
    name: mono_repo self validate
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;dart:stable"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v0.3
        with:
          sdk: stable
      - id: checkout
        uses: actions/checkout@v2
      - name: mono_repo self validate
        run: pub global activate mono_repo 3.4.6
      - name: mono_repo self validate
        run: pub global run mono_repo generate --validate
  job_002:
    name: "analyze_format; PKGS: _test_annotations, example, example_usage, source_gen; `dartfmt -n --set-exit-if-changed .`, `dartanalyzer --fatal-infos --fatal-warnings .`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;dart:dev;packages:_test_annotations-example-example_usage-source_gen;commands:dartfmt-dartanalyzer"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;dart:dev;packages:_test_annotations-example-example_usage-source_gen
            os:ubuntu-latest;pub-cache-hosted;dart:dev
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v0.3
        with:
          sdk: dev
      - id: checkout
        uses: actions/checkout@v2
      - id: _test_annotations_pub_upgrade
        name: "_test_annotations; pub upgrade --no-precompile"
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: _test_annotations
        run: pub upgrade --no-precompile
      - name: "_test_annotations; dartfmt -n --set-exit-if-changed ."
        if: "always() && steps._test_annotations_pub_upgrade.conclusion == 'success'"
        working-directory: _test_annotations
        run: dartfmt -n --set-exit-if-changed .
      - name: "_test_annotations; dartanalyzer --fatal-infos --fatal-warnings ."
        if: "always() && steps._test_annotations_pub_upgrade.conclusion == 'success'"
        working-directory: _test_annotations
        run: dartanalyzer --fatal-infos --fatal-warnings .
      - id: example_pub_upgrade
        name: "example; pub upgrade --no-precompile"
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: example
        run: pub upgrade --no-precompile
      - name: "example; dartfmt -n --set-exit-if-changed ."
        if: "always() && steps.example_pub_upgrade.conclusion == 'success'"
        working-directory: example
        run: dartfmt -n --set-exit-if-changed .
      - name: "example; dartanalyzer --fatal-infos --fatal-warnings ."
        if: "always() && steps.example_pub_upgrade.conclusion == 'success'"
        working-directory: example
        run: dartanalyzer --fatal-infos --fatal-warnings .
      - id: example_usage_pub_upgrade
        name: "example_usage; pub upgrade --no-precompile"
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: example_usage
        run: pub upgrade --no-precompile
      - name: "example_usage; dartfmt -n --set-exit-if-changed ."
        if: "always() && steps.example_usage_pub_upgrade.conclusion == 'success'"
        working-directory: example_usage
        run: dartfmt -n --set-exit-if-changed .
      - name: "example_usage; dartanalyzer --fatal-infos --fatal-warnings ."
        if: "always() && steps.example_usage_pub_upgrade.conclusion == 'success'"
        working-directory: example_usage
        run: dartanalyzer --fatal-infos --fatal-warnings .
      - id: source_gen_pub_upgrade
        name: "source_gen; pub upgrade --no-precompile"
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: source_gen
        run: pub upgrade --no-precompile
      - name: "source_gen; dartfmt -n --set-exit-if-changed ."
        if: "always() && steps.source_gen_pub_upgrade.conclusion == 'success'"
        working-directory: source_gen
        run: dartfmt -n --set-exit-if-changed .
      - name: "source_gen; dartanalyzer --fatal-infos --fatal-warnings ."
        if: "always() && steps.source_gen_pub_upgrade.conclusion == 'success'"
        working-directory: source_gen
        run: dartanalyzer --fatal-infos --fatal-warnings .
  job_003:
    name: "unit_test; PKG: example_usage; `pub run test --run-skipped`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;dart:dev;packages:example_usage;commands:test_0"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;dart:dev;packages:example_usage
            os:ubuntu-latest;pub-cache-hosted;dart:dev
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v0.3
        with:
          sdk: dev
      - id: checkout
        uses: actions/checkout@v2
      - id: example_usage_pub_upgrade
        name: "example_usage; pub upgrade --no-precompile"
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: example_usage
        run: pub upgrade --no-precompile
      - name: "example_usage; pub run test --run-skipped"
        if: "always() && steps.example_usage_pub_upgrade.conclusion == 'success'"
        working-directory: example_usage
        run: pub run test --run-skipped
    needs:
      - job_001
      - job_002
  job_004:
    name: "unit_test; PKG: source_gen; `pub run test`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;dart:dev;packages:source_gen;commands:test_1"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;dart:dev;packages:source_gen
            os:ubuntu-latest;pub-cache-hosted;dart:dev
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v0.3
        with:
          sdk: dev
      - id: checkout
        uses: actions/checkout@v2
      - id: source_gen_pub_upgrade
        name: "source_gen; pub upgrade --no-precompile"
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: source_gen
        run: pub upgrade --no-precompile
      - name: source_gen; pub run test
        if: "always() && steps.source_gen_pub_upgrade.conclusion == 'success'"
        working-directory: source_gen
        run: pub run test
    needs:
      - job_001
      - job_002
