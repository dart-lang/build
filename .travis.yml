# Created with https://github.com/dart-lang/mono_repo
language: dart

####################
# Begin hand edits #
####################
sudo: required
addons:
  chrome: stable

after_failure:
 - tool/report_failure.sh
##################
# End hand edits #
##################

jobs:
  include:
    - stage: analyze_and_format
      script: ./tool/travis.sh dartfmt dartanalyzer
      env: PKG="bazel_codegen"
      dart: dev
    - stage: unit_test
      script: ./tool/travis.sh test_0
      env: PKG="bazel_codegen"
      dart: dev
    - stage: analyze_and_format
      script: ./tool/travis.sh dartfmt dartanalyzer
      env: PKG="build"
      dart: dev
    - stage: unit_test
      script: ./tool/travis.sh test_0
      env: PKG="build"
      dart: dev
    - stage: analyze_and_format
      script: ./tool/travis.sh dartfmt dartanalyzer
      env: PKG="build_barback"
      dart: dev
    - stage: unit_test
      script: ./tool/travis.sh test_0
      env: PKG="build_barback"
      dart: dev
    - stage: analyze_and_format
      script: ./tool/travis.sh dartfmt dartanalyzer
      env: PKG="build_config"
      dart: dev
    - stage: unit_test
      script: ./tool/travis.sh test_0
      env: PKG="build_config"
      dart: dev
    - stage: analyze_and_format
      script: ./tool/travis.sh dartfmt dartanalyzer
      env: PKG="build_modules"
      dart: dev
    - stage: unit_test
      script: ./tool/travis.sh test_0
      env: PKG="build_modules"
      dart: dev
    - stage: analyze_and_format
      script: ./tool/travis.sh dartfmt dartanalyzer
      env: PKG="build_resolvers"
      dart: dev
    - stage: unit_test
      script: ./tool/travis.sh test_0
      env: PKG="build_resolvers"
      dart: dev
    - stage: analyze_and_format
      script: ./tool/travis.sh dartfmt dartanalyzer
      env: PKG="build_runner"
      dart: dev
    - stage: unit_test
      script: ./tool/travis.sh test_0
      env: PKG="build_runner"
      dart: dev
    - stage: analyze_and_format
      script: ./tool/travis.sh dartfmt dartanalyzer
      env: PKG="build_test"
      dart: dev
    - stage: unit_test
      script: ./tool/travis.sh test_0
      env: PKG="build_test"
      dart: dev
    - stage: analyze_and_format
      script: ./tool/travis.sh dartfmt dartanalyzer
      env: PKG="build_web_compilers"
      dart: dev
    - stage: unit_test
      script: ./tool/travis.sh test_1
      env: PKG="build_web_compilers"
      dart: dev
    - stage: analyze_and_format
      script: ./tool/travis.sh dartanalyzer
      env: PKG="e2e_example"
      dart: dev
    - stage: unit_test
      script: ./tool/travis.sh command
      env: PKG="e2e_example"
      dart: dev
    - stage: e2e_test
      script: ./tool/travis.sh test_2
      env: PKG="e2e_example"
      dart: dev
    - stage: e2e_test
      script: ./tool/travis.sh test_3
      env: PKG="e2e_example"
      dart: dev
    - stage: e2e_test
      script: ./tool/travis.sh test_4
      env: PKG="e2e_example"
      dart: dev
    - stage: e2e_test
      script: ./tool/travis.sh test_5
      env: PKG="e2e_example"
      dart: dev
    - stage: e2e_test_cron
      script: ./tool/travis.sh test_0
      env: PKG="e2e_example"
      dart: be/raw/latest
    - stage: analyze_and_format
      script: ./tool/travis.sh dartfmt dartanalyzer
      env: PKG="example"
      dart: dev
    - stage: analyze_and_format
      script: ./tool/travis.sh dartfmt dartanalyzer
      env: PKG="scratch_space"
      dart: dev
    - stage: unit_test
      script: ./tool/travis.sh test_0
      env: PKG="scratch_space"
      dart: dev

stages:
  - analyze_and_format
  - unit_test
  - e2e_test
  - name: e2e_test_cron
    if: type IN (api, cron)

# Only building master means that we don't run two builds for each pull request.
branches:
  only: [master]

cache:
  directories:
    - $HOME/.pub-cache
